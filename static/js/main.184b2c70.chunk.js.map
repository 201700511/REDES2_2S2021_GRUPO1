{"version":3,"sources":["service/apirest.js","views/Redes2practica2.js","reportWebVitals.js","index.js"],"names":["Apiurl","style","position","top","left","transform","width","bgcolor","border","boxShadow","p","Redes2practica2","React","useState","open","setOpen","openInfo","setOpenInfo","handleOpenInfo","nombreInput","setNombreInput","carnetInput","setCarnetInput","cursoproyectoInput","setCursoProyectoInput","cuerpodelreporteInput","setCuerpoDelReporteInput","cerrarModal","cerrarModalInfo","toastWarning","mensaje","toast","warning","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","tastError","message","error","useEffect","document","body","classList","toggle","crearTablas","a","axios","get","reportes","setReportes","getMsgVisualizacion","post","data","getElementById","value","length","innerHTML","respuestaDeServer","data_","i","push","map","Item","carne_practicante","cod_reporte","cursoproyecto","descripcion","fecha","split","nombre_practicante","servidor","dismiss","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","id","replace","inputbuscar","className","minHeight","Container","Row","Col","xs","Button","color","onClick","TextField","label","variant","size","title","icons","columns","field","actions","icon","tooltip","event","rowData","verReporte","components","Action","action","textTransform","options","actionsColumnIndex","search","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","Box","sx","padding","fontWeight","fullWidth","margin","autoComplete","onChange","target","isNaN","FormGroup","multiline","type","info","then","msg","success","tastSuccess","atendidopor","catch","String","float","textAlign","md","bottom","marginLeft","toastStyle","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","path","from","to"],"mappings":"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","file":"static/js/main.184b2c70.chunk.js","sourcesContent":["export const Apiurl = \"http://3.15.4.152:80\";","import React, { useEffect, useState, forwardRef } from \"react\";\r\nimport axios from 'axios';\r\nimport { Apiurl } from '../service/apirest';\r\n//import MUIDataTable from 'mui-datatables';\r\nimport MaterialTable from '@material-table/core';\r\nimport Modal from \"@mui/material/Modal\";\r\nimport Backdrop from \"@mui/material/Backdrop\";\r\nimport Fade from \"@mui/material/Fade\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\n\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    FormGroup,\r\n} from \"reactstrap\";\r\n\r\nconst style = {\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: 600,\r\n    bgcolor: \"background.paper\",\r\n    border: \"2px solid #000\",\r\n    boxShadow: 24,\r\n    p: 4\r\n};\r\n\r\n\r\n\r\nexport default function Redes2practica2() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    const [openInfo, setOpenInfo] = React.useState(false);\r\n    const handleOpenInfo = () => setOpenInfo(true);\r\n    const handleCloseInfo = () => setOpenInfo(false);\r\n\r\n    //const [value, setValue] = React.useState('Controlled');\r\n    const [nombreInput, setNombreInput] = useState(\"\");\r\n    const [carnetInput, setCarnetInput] = useState(\"\");\r\n    const [cursoproyectoInput, setCursoProyectoInput] = useState(\"\");\r\n    const [cuerpodelreporteInput, setCuerpoDelReporteInput] = useState(\"\");\r\n    /*const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };*/\r\n\r\n    React.useEffect(() => {\r\n        document.body.classList.toggle(\"index-page\");\r\n        return function cleanup() {\r\n            document.body.classList.toggle(\"index-page\");\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const crearTablas = async () => {\r\n            try {\r\n                let url = Apiurl + \"/inicializar\";\r\n                await axios.get(url);\r\n            }\r\n            catch (err) {\r\n                tastError(\"Error al crear tablas: Ver useEffect -> crearTablas\")\r\n            }\r\n        };\r\n        crearTablas();\r\n    }, []);\r\n\r\n    function levantarModal() {\r\n        handleOpen();\r\n    }\r\n\r\n    function cerrarModal() {\r\n        handleClose();\r\n        setNombreInput(\"\");\r\n        setCarnetInput(\"\");\r\n        setCursoProyectoInput(\"\");\r\n        setCuerpoDelReporteInput(\"\");\r\n    }\r\n\r\n    function cerrarModalInfo() {\r\n        handleCloseInfo();\r\n    }\r\n\r\n    function validar() {\r\n        if (carnetInput === \"\") {\r\n            toastWarning(\"Campo Carnet vacio.\");\r\n        } else if (nombreInput === \"\") {\r\n            toastWarning(\"Campo Nombre vacio.\");\r\n        } else if (cursoproyectoInput === \"\") {\r\n            toastWarning(\"Campo Curso/proyecto vacio.\");\r\n        } else if (cuerpodelreporteInput === \"\") {\r\n            toastWarning(\"Campo Cuerpo del reporte vacio.\");\r\n        } else {\r\n            tastRegistrando(\"Procesando...\");\r\n            let body = {\r\n                descripcion: cuerpodelreporteInput,\r\n                carne_practicante: carnetInput,\r\n                nombre_practicante: nombreInput,\r\n                cursoproyecto: cursoproyectoInput\r\n            };\r\n            let url = Apiurl + \"/reporte\";\r\n            axios.post(url, body).then(data => {\r\n                //console.log(data);\r\n                if (data.data.msg === \"Reporte Almacenado Correctamente\") {\r\n                    toast.dismiss();\r\n                    getMsgVisualizacion();\r\n                    cerrarModal();\r\n                    tastSuccess('Reporte Almacenado Correctamente. Solicitud antendida por \"' + data.data.atendidopor + '\"');\r\n                } else {\r\n                    toast.dismiss();\r\n                    tastError(\"Ocurrio un error al crear el reporte.\");\r\n                }\r\n            }).catch((error) => {\r\n                toast.dismiss();\r\n                tastError(String(error));\r\n            })\r\n        }\r\n    }\r\n\r\n    function toastWarning(mensaje) {\r\n        toast.warning(mensaje, {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    function tastSuccess(message) {\r\n        toast.success(message, {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined\r\n        });\r\n    }\r\n\r\n    function tastRegistrando(message) {\r\n        toast.info(message, {\r\n            position: \"top-right\",\r\n            autoClose: false,\r\n            hideProgressBar: false,\r\n            closeOnClick: false,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n        });\r\n    }\r\n\r\n    function tastError(message) {\r\n        toast.error(message, {\r\n            position: \"top-right\",\r\n            autoClose: 3000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n        });\r\n    }\r\n\r\n    const [reportes, setReportes] = useState([]);\r\n    const getMsgVisualizacion = async () => {\r\n        try {\r\n            setReportes([]);\r\n            let url = Apiurl + \"/getreportes\";\r\n            const { data } = await axios.post(url);\r\n            document.getElementById(\"inputBuscar\").value = '';\r\n            if (data.length === 1) {\r\n                document.getElementById(\"meterData\").innerHTML = 'Solicitud atendida por el servidor \"' + data[data.length - 1].respuestaDeServer + '\"';\r\n            } else {\r\n                var data_ = [];\r\n                for (var i = 0; i < data.length - 1; i++) {\r\n                    data_.push(data[i]);\r\n                }\r\n                document.getElementById(\"meterData\").innerHTML = 'Solicitud atendida por el servidor \"' + data[data.length - 1].respuestaDeServer + '\"';\r\n                setReportes(data_.map(Item => ({ carne_practicante: Item.carne_practicante, cod_reporte: Item.cod_reporte, cursoproyecto: Item.cursoproyecto, descripcion: Item.descripcion, fecha: ((Item.fecha).split(\"T\"))[0], nombre_practicante: Item.nombre_practicante, servidor: Item.servidor })));\r\n            }\r\n        }\r\n        catch (err) {\r\n            toast.dismiss();\r\n            //tastError(String(err));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getMsgVisualizacion = async () => {\r\n            try {\r\n                let url = Apiurl + \"/getreportes\";\r\n                const { data } = await axios.post(url);\r\n                document.getElementById(\"inputBuscar\").value = '';\r\n                //console.log(data.length - 1);\r\n                if (data.length === 1) {\r\n                    document.getElementById(\"meterData\").innerHTML = 'Solicitud atendida por el servidor \"' + data[data.length - 1].respuestaDeServer + '\"';\r\n                } else {\r\n                    var data_ = [];\r\n                    for (var i = 0; i < data.length - 1; i++) {\r\n                        data_.push(data[i]);\r\n                    }\r\n                    document.getElementById(\"meterData\").innerHTML = 'Solicitud atendida por el servidor \"' + data[data.length - 1].respuestaDeServer + '\"';\r\n                    setReportes(data_.map(Item => ({ carne_practicante: Item.carne_practicante, cod_reporte: Item.cod_reporte, cursoproyecto: Item.cursoproyecto, descripcion: Item.descripcion, fecha: ((Item.fecha).split(\"T\"))[0], nombre_practicante: Item.nombre_practicante, servidor: Item.servidor })));\r\n                }\r\n            }\r\n            catch (err) {\r\n                toast.dismiss();\r\n                //tastError(String(err));\r\n            }\r\n        }\r\n        getMsgVisualizacion();\r\n    }, [])\r\n\r\n    const columns = [\r\n        { title: \"Carnet\", field: \"carne_practicante\" },\r\n        { title: \"Nombre\", field: \"nombre_practicante\" },\r\n        { title: \"Proyecto\", field: \"cursoproyecto\" },\r\n        { title: \"Fecha\", field: \"fecha\" },\r\n        { title: \"Servidor\", field: \"servidor\" }\r\n    ];\r\n\r\n    /*const data = [\r\n        { firstName: \"Tod\", lastName: \"Miles\", birthYear: 1987, availability: true },\r\n        { firstName: \"Jess\", lastName: \"Smith\", birthYear: 2000, availability: false }\r\n    ];*/\r\n\r\n    /*const options_ = {\r\n        filterType: 'dropdown',\r\n        responsive: 'stacked',\r\n        rowsPerPage: 10,\r\n        page: 0,\r\n        selectableRows: false,\r\n        textLabels: {\r\n            body: {\r\n                noMatch: \"Lo sentimos, no se encontraron archivos\",\r\n                toolTip: \"Ordenar\",\r\n                columnHeaderTooltip: column => `Ordenar por ${column.label}`\r\n            },\r\n            pagination: {\r\n                next: \"Siguiente página\",\r\n                previous: \"Página anterior\",\r\n                rowsPerPage: \"Archivos por página:\",\r\n                displayRows: \"de\",\r\n            },\r\n            toolbar: {\r\n                search: \"Buscar\",\r\n                downloadCsv: \"Descargar CSV\",\r\n                print: \"Imprimir\",\r\n                viewColumns: \"Ver columnas\",\r\n                filterTable: \"Tabla de filtros\",\r\n            },\r\n            filter: {\r\n                all: \"Todos\",\r\n                title: \"FILTROS\",\r\n                reset: \"REINICIAR\",\r\n            }\r\n        }\r\n    };*/\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n    };\r\n\r\n    async function verReporte(id) {\r\n        let url = Apiurl + \"/getrepindividual\";\r\n        let body = {\r\n            cod_reporte: id\r\n        }\r\n        const { data } = await axios.post(url, body);\r\n        //console.log(data);\r\n        handleOpenInfo();\r\n        document.getElementById(\"carnet_\").innerHTML = data[0].carne_practicante;\r\n        document.getElementById(\"nombre_\").innerHTML = data[0].nombre_practicante;\r\n        document.getElementById(\"curso_\").innerHTML = data[0].cursoproyecto;\r\n        document.getElementById(\"prcesado_\").innerHTML = data[0].servidor;\r\n        document.getElementById(\"fecha_\").innerHTML = ((data[0].fecha).replace(\"T\", \" \")).replace(\".000Z\", \"\");\r\n        document.getElementById(\"cuerpo_\").innerHTML = data[0].descripcion;\r\n        document.getElementById(\"meterData2\").innerHTML = 'Solicitud atendida por el servidor \"' + data[1].respuestaDeServer + '\"';\r\n    }\r\n\r\n    function comprobarNum(a) {\r\n        if (isNaN(a)) {\r\n        } else if (a < 0) {\r\n        } else {\r\n            setCarnetInput(a);\r\n        }\r\n    }\r\n\r\n    async function traerBusqueda() {\r\n        var inputbuscar = document.getElementById(\"inputBuscar\").value;\r\n        if (inputbuscar === \"\") {\r\n            getMsgVisualizacion();\r\n        } else {\r\n            let url = Apiurl + \"/getrep\";\r\n            let body = {\r\n                carne_practicante: inputbuscar\r\n            }\r\n            const { data } = await axios.post(url, body);\r\n            //console.log(data);\r\n            setReportes([]);\r\n            if (data.length === 1) {\r\n                document.getElementById(\"meterData\").innerHTML = 'Solicitud atendida por el servidor \"' + data[data.length - 1].respuestaDeServer + '\"';\r\n            } else {\r\n                var data_ = [];\r\n                for (var i = 0; i < data.length - 1; i++) {\r\n                    data_.push(data[i]);\r\n                }\r\n                document.getElementById(\"meterData\").innerHTML = 'Solicitud atendida por el servidor \"' + data[data.length - 1].respuestaDeServer + '\"';\r\n                setReportes(data_.map(Item => ({ carne_practicante: Item.carne_practicante, cod_reporte: Item.cod_reporte, cursoproyecto: Item.cursoproyecto, descripcion: Item.descripcion, fecha: ((Item.fecha).split(\"T\"))[0], nombre_practicante: Item.nombre_practicante, servidor: Item.servidor })));\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrapper\">\r\n                <div className=\"main\">\r\n                    <div className=\"section section-signup\" style={{ minHeight: \"100vh\" }}>\r\n                        <Container >\r\n                            <div className=\"squares square1 blue\" />\r\n                            <div className=\"squares square2 blue\" />\r\n                            <div className=\"squares square3 blue\" />\r\n                            <div className=\"squares square4 blue\" />\r\n                            <div className=\"squares square5 blue\" />\r\n                            <div className=\"squares square6 blue\" />\r\n                            <div className=\"squares square7 blue\" />\r\n                            <div className=\"squares square7 blue\" />\r\n                            <Row className=\"row-grid justify-content-between \">\r\n                                <Col xs=\"3\">\r\n                                    <Button color=\"primary\" onClick={levantarModal}>Ingresar reporte</Button>\r\n                                </Col>\r\n                                <Col xs=\"9\">\r\n                                    <div className=\"buscar\">\r\n                                        <TextField id=\"inputBuscar\" label=\"Buscar\" variant=\"outlined\" size=\"small\" />\r\n                                        <Button color=\"warning\" className=\"btnbusqueda\" onClick={traerBusqueda}>Buscar</Button>\r\n                                    </div>\r\n                                    <MaterialTable\r\n                                        title=\"Listado de reportes\"\r\n                                        icons={tableIcons}\r\n                                        columns={columns}\r\n                                        data={reportes}\r\n                                        actions={[\r\n                                            {\r\n                                                title: 'Name',\r\n                                                icon: 'save',\r\n                                                tooltip: 'Save User',\r\n                                                onClick: (event, rowData) => verReporte(rowData.cod_reporte)\r\n                                            }\r\n                                        ]}\r\n                                        components={{\r\n                                            Action: props => (\r\n                                                <Button\r\n                                                    onClick={(event) => props.action.onClick(event, props.data)}\r\n                                                    color=\"info\"\r\n                                                    variant=\"contained\"\r\n                                                    style={{ textTransform: 'none' }}\r\n                                                    size=\"sm\"\r\n                                                >\r\n                                                    Ver\r\n                                                </Button>\r\n                                            ),\r\n                                        }}\r\n                                        options={{\r\n                                            actionsColumnIndex: -1,\r\n                                            search: false\r\n                                        }}\r\n                                    />\r\n                                    <div className=\"respuesta\">\r\n                                        <span id=\"meterData\"></span>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            {/*MODAL*/}\r\n                            <Modal\r\n                                aria-labelledby=\"transition-modal-title\"\r\n                                aria-describedby=\"transition-modal-description\"\r\n                                open={open}\r\n                                onClose={cerrarModal}\r\n                                closeAfterTransition\r\n                                BackdropComponent={Backdrop}\r\n                                BackdropProps={{\r\n                                    timeout: 500\r\n                                }}>\r\n                                <Fade in={open}>\r\n                                    <Box sx={style}>\r\n                                        <blockquote className=\"blockquote text-center\" style={{ padding: \"12px\" }}>\r\n                                            <p className=\"mb-0\" style={{ color: \"#000\", fontWeight: \"600\" }}>Ingreso de Reportes de Practicantes</p>\r\n                                        </blockquote>\r\n                                        <form>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <TextField\r\n                                                        label=\"Carnet\"\r\n                                                        id=\"carnet\"\r\n                                                        size=\"small\"\r\n                                                        fullWidth\r\n                                                        margin=\"normal\"\r\n                                                        autoComplete=\"off\"\r\n                                                        value={carnetInput}\r\n                                                        onChange={event => comprobarNum(event.target.value)}\r\n                                                    />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <TextField\r\n                                                        label=\"Nombre\"\r\n                                                        id=\"nombre\"\r\n                                                        size=\"small\"\r\n                                                        fullWidth\r\n                                                        margin=\"normal\"\r\n                                                        autoComplete=\"off\"\r\n                                                        value={nombreInput}\r\n                                                        onChange={event => setNombreInput(event.target.value)}\r\n                                                    />\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <TextField\r\n                                                label=\"Curso/proyecto\"\r\n                                                id=\"ss\"\r\n                                                size=\"small\"\r\n                                                fullWidth\r\n                                                margin=\"normal\"\r\n                                                autoComplete=\"off\"\r\n                                                value={cursoproyectoInput}\r\n                                                onChange={event => setCursoProyectoInput(event.target.value)}\r\n                                            />\r\n                                            <FormGroup>\r\n                                                <TextField\r\n                                                    id=\"outlined-textarea\"\r\n                                                    label=\"Cuerpo del reporte\"\r\n                                                    multiline\r\n                                                    fullWidth\r\n                                                    margin=\"normal\"\r\n                                                    autoComplete=\"off\"\r\n                                                    value={cuerpodelreporteInput}\r\n                                                    onChange={event => setCuerpoDelReporteInput(event.target.value)}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                        </form>\r\n                                        <div>\r\n                                            <Button color=\"success\" type=\"button\" onClick={validar}>\r\n                                                Crear reporte\r\n                                            </Button>\r\n                                            <Button color=\"danger\" type=\"button\" style={{ float: \"right\" }} onClick={cerrarModal}>\r\n                                                Cancelar\r\n                                            </Button>\r\n                                        </div>\r\n                                    </Box>\r\n                                </Fade>\r\n                            </Modal>\r\n                            {/*END MODAL*/}\r\n\r\n                            {/*MODAL VER INFO*/}\r\n                            <Modal\r\n                                aria-labelledby=\"transition-modal-title\"\r\n                                aria-describedby=\"transition-modal-description\"\r\n                                open={openInfo}\r\n                                onClose={cerrarModalInfo}\r\n                                closeAfterTransition\r\n                                BackdropComponent={Backdrop}\r\n                                BackdropProps={{\r\n                                    timeout: 500\r\n                                }}>\r\n                                <Fade in={openInfo}>\r\n                                    <Box sx={style}>\r\n                                        <blockquote className=\"blockquote text-center\" style={{ padding: \"12px\" }}>\r\n                                            <p className=\"mb-0\" style={{ color: \"#000\", fontWeight: \"600\" }}>Ver reporte de practicante</p>\r\n                                        </blockquote>\r\n                                        <div key=\"fpadredirdiv\" id=\"typography\">\r\n                                            <Row key=\"rowf\" style={{ textAlign: \"justify\" }}>\r\n                                                <Col key=\"colf\" md=\"12\">\r\n                                                    <div key=\"fdir1\" className=\"typography-line\">\r\n                                                        <h6 key=\"nombre1\">\r\n                                                            <span style={{ bottom: \"0\", color: \"black\" }}>Carnet</span>\r\n                                                            <p id=\"carnet_\" style={{ marginLeft: \"6%\", color: \"black\", textTransform: \"uppercase\", fontWeight: \"600\" }}></p>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div key=\"fdir2\" className=\"typography-line\">\r\n                                                        <h6 key=\"nombre2\">\r\n                                                            <span style={{ bottom: \"0\", color: \"black\" }}>Nombre</span>\r\n                                                            <p id=\"nombre_\" style={{ marginLeft: \"6%\", color: \"black\", textTransform: \"uppercase\", fontWeight: \"600\" }}></p>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div key=\"fdir3\" className=\"typography-line\">\r\n                                                        <h6 key=\"nombre3\">\r\n                                                            <span style={{ bottom: \"0\", color: \"black\" }}>Curso/proyecto</span>\r\n                                                            <p id=\"curso_\" style={{ marginLeft: \"6%\", color: \"black\", textTransform: \"uppercase\", fontWeight: \"600\" }}></p>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div key=\"fdir4\" className=\"typography-line\">\r\n                                                        <h6 key=\"nombre4\">\r\n                                                            <span style={{ bottom: \"0\", color: \"black\" }}>Procesado por</span>\r\n                                                            <p id=\"prcesado_\" style={{ marginLeft: \"6%\", color: \"black\", textTransform: \"uppercase\", fontWeight: \"600\" }}></p>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div key=\"fdir5\" className=\"typography-line\">\r\n                                                        <h6 key=\"nombre5\">\r\n                                                            <span style={{ bottom: \"0\", color: \"black\" }}>Fecha</span>\r\n                                                            <p id=\"fecha_\" style={{ marginLeft: \"6%\", color: \"black\", textTransform: \"uppercase\", fontWeight: \"600\" }}></p>\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div key=\"fdir6\" className=\"typography-line\">\r\n                                                        <h6 key=\"nombre6\">\r\n                                                            <span style={{ bottom: \"0\", color: \"black\" }}>Cuerpo del reporte</span>\r\n                                                            <p id=\"cuerpo_\" style={{ marginLeft: \"6%\", color: \"black\", textTransform: \"uppercase\", fontWeight: \"600\" }}></p>\r\n                                                        </h6>\r\n                                                    </div>\r\n\r\n\r\n                                                    <div>\r\n                                                        <div className=\"respuesta2\">\r\n                                                            <span id=\"meterData2\"></span>\r\n                                                        </div>\r\n                                                        <Button color=\"info\" type=\"button\" style={{ float: \"right\" }} onClick={cerrarModalInfo}>\r\n                                                            Cerrar\r\n                                                        </Button>\r\n                                                    </div>\r\n\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </div>\r\n                                    </Box>\r\n                                </Fade>\r\n                            </Modal>\r\n                            {/*END MODAL VER INFO*/}\r\n                        </Container >\r\n                    </div>\r\n                </div>\r\n                <ToastContainer\r\n                    toastStyle={{ color: \"#000\" }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport \"./assets/css/nucleo-icons.css\";\r\nimport \"./assets/scss/blk-design-system-react.scss?v=1.2.0\";\r\nimport \"./assets/demo/demo.css\";\r\n\r\nimport Redes2practica2 from './views/Redes2practica2';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <Route path=\"/REDES2_2S2021_GRUPO1\" render={(props) => <Redes2practica2 {...props} />} />\r\n      <Redirect from=\"/\" to=\"/REDES2_2S2021_GRUPO1\" />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}